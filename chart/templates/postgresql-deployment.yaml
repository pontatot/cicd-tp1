apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: postgresql
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: postgresql
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: postgresql
          image: "postgres:16"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.postgresql.postgresqlDatabase }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgresql.postgresqlUsername }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresql.postgresqlPassword }}"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
            - name: postgresql-init
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.postgresqlUsername }} -d {{ .Values.postgresql.postgresqlDatabase }}
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.postgresqlUsername }} -d {{ .Values.postgresql.postgresqlDatabase }}
            initialDelaySeconds: 45
            periodSeconds: 10
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-postgresql-data
        - name: postgresql-init
          configMap:
            name: {{ .Values.postgresql.initdbScriptsConfigMap }}